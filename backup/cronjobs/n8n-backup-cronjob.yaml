apiVersion: batch/v1
kind: CronJob
metadata:
  name: n8n-backup
  namespace: n8n
spec:
  # Executar backup diariamente às 02:00
  schedule: "0 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: backup-service-account
          containers:
            - name: backup
              image: postgres:16
              command:
                - /bin/bash
                - -c
                - |
                  echo "🗄️ Iniciando backup automático do n8n..."

                  # Configurações
                  TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
                  BACKUP_DIR="/backup/n8n/$TIMESTAMP"
                  mkdir -p "$BACKUP_DIR"

                  # Obter credenciais do PostgreSQL
                  DB_PASSWORD=$(cat /etc/secrets/postgres-password)

                  # Backup do banco de dados
                  echo "💾 Fazendo backup do banco..."
                  export PGPASSWORD="$DB_PASSWORD"
                  pg_dump -h postgres.default.svc.cluster.local -p 5432 -U postgres -d n8n \
                    --verbose --clean --no-owner --no-privileges > "$BACKUP_DIR/n8n_database_$TIMESTAMP.sql"

                  # Comprimir backup
                  gzip "$BACKUP_DIR/n8n_database_$TIMESTAMP.sql"

                  # Criar metadados
                  cat > "$BACKUP_DIR/backup_info.json" <<EOF
                  {
                    "app_name": "n8n",
                    "backup_type": "db",
                    "timestamp": "$TIMESTAMP",
                    "date": "$(date -Iseconds)",
                    "automated": true,
                    "size": "$(du -sh $BACKUP_DIR | cut -f1)"
                  }
                  EOF

                  echo "✅ Backup automático concluído: $TIMESTAMP"

                  # Limpeza: manter apenas os últimos 7 backups
                  echo "🧹 Limpando backups antigos (mantendo últimos 7)..."
                  cd /backup/n8n
                  ls -t | tail -n +8 | xargs -r rm -rf

                  echo "🎉 Backup automático finalizado!"
              env:
                - name: TZ
                  value: "America/Sao_Paulo"
              volumeMounts:
                - name: backup-storage
                  mountPath: /backup
                - name: postgres-secret
                  mountPath: /etc/secrets
                  readOnly: true
          volumes:
            - name: backup-storage
              hostPath:
                path: /mnt/host-cluster/postgresql/backup
                type: DirectoryOrCreate
            - name: postgres-secret
              secret:
                secretName: postgres-admin-secret
                items:
                  - key: POSTGRES_PASSWORD
                    path: postgres-password
          restartPolicy: OnFailure
  # Manter histórico dos últimos 3 jobs
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
